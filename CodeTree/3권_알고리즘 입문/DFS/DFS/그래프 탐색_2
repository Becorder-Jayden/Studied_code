import java.util.Scanner; 
import java.util.ArrayList;

public class Main {
    public static final int MAX_NUM = 1000;
    public static int n, m;

    public static ArrayList<Integer>[] graph = new ArrayList[MAX_NUM+1];
    public static boolean[] visited = new boolean[MAX_NUM+1];
    public static int vertexCnt = 0;

    public static void DFS(int vertex) {

        // 해당 정점에서 이어져있는 모든 정점에 대해 탐색
        for (int i=0; i<graph[vertex].size(); i++) {
            
            int currV = graph[vertex].get(i);
            if (!visited[currV]) {
                visited[currV] = true;  // 방문 처리
                vertexCnt++;  // vertexCnt 증가
                DFS(currV);
            } 
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        n = sc.nextInt();  // 정점의 개수
        m = sc.nextInt();  // 간선의 개수

        // 이차원 빈 리스트 생성
        for (int i=0; i<=n; i++) {
            graph[i] = new ArrayList<>();  // 그래프 인덱스 하나에 빈 리스트 생성
        }

        while (m-->0) {
            int v1 = sc.nextInt();
            int v2 = sc.nextInt();

            graph[v1].add(v2);
            graph[v2].add(v1);
        }

        visited[1] = true;
        DFS(1);

        System.out.println(vertexCnt);
    }
}   