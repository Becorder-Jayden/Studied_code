// O(N^2) 풀이 방법
import java.util.Scanner;

public class Main {
    public static final int MAX_N = 1000;
    public static final int INT_MIN = Integer.MIN_VALUE;

    public static int n;

    public static int[] a = new int[MAX_N+1];
    public static int[] dp = new int[MAX_N+1];
    
    public static void init() {
        for (int i=0; i<=n; i++) {
            dp[i] = INT_MIN;
        }
        dp[0] = 0;
        a[0] = 0;
    }


    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        n = sc.nextInt();
        for (int i=1; i<=n; i++) {
            a[i] = sc.nextInt();
        }
        
        // a, dp 배열 초기화
        init();

        // 앞에서부터 진행
        for (int i=1; i<=n; i++) {  // i: 기준이 되는 값
            for (int j=0; j<i; j++ ){  // j: 기준값 이전에 위치한 값

                // 기준값이 기준값 이전에 위치한 값보다 크다면, 이전값의 dp보다 1증가 시킴 
                if (a[j] < a[i]) {
                    dp[i] = Math.max(dp[i], dp[j] + 1);  // *dp원리 적용: (dp[i], dp[j]+1)을 비교
                }
            }
        }

        // 최대값 찾기
        int ans = 0;
        for (int i=0; i<=n; i++) {
            ans = Math.max(ans, dp[i]);
        }
        System.out.println(ans);
    }
}