import java.util.Scanner;

public class Main {
    public static final int MAX_N = 100;
    
    public static int n; 
    public static int[][] num = new int[MAX_N+1][MAX_N+1];
    public static int[][] dp = new int[MAX_N+1][MAX_N+1];

    public static void init() {
        dp[0][0] = num[0][0];

        // 최좌측 열의 초기값 설정
        for (int i=1; i<n; i++) {
            dp[i][0] = Math.min(dp[i-1][0], num[i][0]);
        }

        // 최상단 열의 초기값 설정
        for (int i=1; i<n; i++) {
            dp[0][i] = Math.min(dp[0][i-1], num[0][i]);
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in); 
        
        // 주어진 값 입력
        n = sc.nextInt();
        for (int i=0; i<n; i++) {
            for (int j=0; j<n ;j++) {
                num[i][j] = sc.nextInt();
            }
        } 

        init();

        for (int i=1; i<=n; i++) {
            for (int j=1; j<=n; j++) {

                // 1) 거쳐간 위치(위에서 아래로 / 왼쪽에서 오른쪽으로)에서의 최대값 구하기
                // 2) 거쳐간 위치와 현재 위치의 값 중 작은 값 구하기
                dp[i][j] = Math.min(Math.max(dp[i-1][j], dp[i][j-1]), num[i][j]);
            }
        }

        // System.out.println(dp[n-1][n-1]);
        
        for (int i=0; i<n; i++) {
            for (int j=0; j<n; j++) {
                System.out.print(dp[i][j]+" ");
            }
            System.out.println();
        }
    }
}