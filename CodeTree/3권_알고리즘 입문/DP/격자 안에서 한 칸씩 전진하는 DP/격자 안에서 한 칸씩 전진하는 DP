// DP(누적합)으로 풀이 ← dx, dy 정의를 굳이 하지 않아도 됨

import java.util.Scanner;

public class Main {
    public static int n;
    public static final int MAX_N = 100;

    public static int[][] grid = new int[MAX_N+1][MAX_N+1];
    public static int[][] step = new int[MAX_N+1][MAX_N+1];

    public static boolean inRange(int x, int y) {
        return 1<=x && x<=n && 1<=y && y<=n; 
    }

    public static void init() {
        step[1][n] = grid[1][n];
        
        for (int i=n-1; i>0; i--) {
            step[1][i] = step[1][i+1] + grid[1][i];
        }

        for (int i=2; i<=n; i++) {
            step[i][n] = step[i-1][n] + grid[i][n];
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt(); 

        for (int i=1; i<=n; i++) {
            for (int j=1; j<=n; j++) {
                grid[i][j] = sc.nextInt();
            }
        }

        init();

        for (int i=2; i<=n; i++) {
            for (int j=n-1; j>=1; j--) {
                step[i][j] = Math.min(step[i-1][j], step[i][j+1]) + grid[i][j];
            }
        }

        System.out.println(step[n][1]);
    }
}