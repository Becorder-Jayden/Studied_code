// *sumVal을 이용해 전체 값을 먼저 구하고, 개별 값을 뺀 후 진행
// *배열을 거꾸로 확인

import java.util.Scanner;
import java.util.PriorityQueue;

public class Main {
    public final static int MAX_N = 100000;

    public static int n; 
    public static int[] arr = new int[MAX_N];
    public static int sumVal;
    public static double maxAvg;
    public static PriorityQueue<Integer> pq = new PriorityQueue<>();

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in); 
        n = sc.nextInt();

        for (int i=0; i<n; i++) {
            arr[i] = sc.nextInt();
        }

        // arr의 마지막 값을 pq, sumVal에 입력
        pq.add(arr[n-1]);  
        sumVal += arr[n-1]; 

        // k가 n-2일 때부터 1일 때까지 거꾸로 탐색: i를 분모에 활용할 수 있다
        for (int i=n-2; i>=1; i--) {
            pq.add(arr[i]);
            sumVal += arr[i];

            // 남은 정수 중 작은 숫자를 찾고, 그 숫자를 외한 평균 구하기
            double avg = (double) (sumVal - pq.peek()) / (n-i-1); 
            
            if (maxAvg < avg) {
                maxAvg = avg;
            }
        }

        System.out.printf("%.2f", maxAvg); 
    }

}