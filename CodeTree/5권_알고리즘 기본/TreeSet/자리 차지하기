import java.util.Scanner; 
import java.util.TreeSet;

public class Main {
    public final static int MAX_NUM = 100000;

    public static int n, m;
    public static int[] a = new int[MAX_NUM+1];
    public static TreeSet<Integer> ts = new TreeSet<>(); 

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in); 
        n = sc.nextInt();
        m = sc.nextInt();

        // 주어지는 정보를 a 배열에 입력 
        for (int i=0; i<n; i++) {
            a[i] = sc.nextInt(); 
        }

        // TreeSet 구조에 (1, m) 범위의 값 입력
        // ts: 앉을 수 있는 자리 번호 
        for (int i=1; i<=m; i++) {
            ts.add(i);  
        }

        int ans = 0;

        for (int i=0; i<n; i++) {
            //  1) a[i]보다 작은 값이 없다면, ts에서 제거, ans 값 증가
            //      cf. {1, 2, 3, 4}의 자리가 있고, {2, 2}와 같이 2번 자리에 앉고싶은 사람이 여러 명일 때 
            //          첫 번째 2번 → 2번 자리에 앉는다 
            //          두 번째 2번 → 2번 자리보다 작은 1번 자리에 앉는다
            if (ts.floor(a[i]) != null) {
                int num = ts.floor(a[i]);
                ts.remove(num);
                
                ans++;  // ans 값 증가
            }

            //  2) a[i]보다 작은 값이 있다면 종료
            else {
                break;
            }        
        }
        
        System.out.println(ans);

    }
}