# 1. 작업 환경 준비

## 1. 설정 파일 만들기

1. .prettierrc 파일 생성

```jsx
{
	"singleQuote": true,
	"semi": true,
	"useTabs": false,
	"tabWidth": 2,
	"trailingComma": "all",
	"printWidth": 80
}
```

1. jsconfig.json 파일 생성 : 자동 import 기능 동작을 위한 설정

```bash
{
	"compilerOptions": {
		"target": "es6"
	}
}	
```

## 2. 라우터 적용

1. react-router-dom 라이브러리 설치

```bash
$ yarn add react-router-dom
```

1. 컴포넌트 생성
    - src/pages 디렉터리에 생성
    - ex) LoginPages.js, RegisterPage.js, WirtePage.js, PostPage.js, PostListPage.js 등
2. index.js : BrowerRouter로 App 컴포넌트 감싸기

```jsx
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import { BrowswerRouter } from 'react-router-dom';

const root = ReactDOM.creeateeRoot(document.getElementById('root'));
root.render(
	<BrowserRouter>
		<App />
	</BrowswerRouter>
);
```

1. App.js : Router 컴포넌트를 사용해서 각 라우트의 경로를 지정

```jsx
import { Route, Routes } from 'react-router-dom';
import PostListPage from './pages/PostListPage';
import LoginPage from './pages/LoginPage';
import RegisterPage from './pagees/RegisterPage';
import WritePage from './pageees/WritePage';
import PostPge from './pages/PostPage';

const App = () => {
	return (
		<Routes>
			<Route path="/" element={<PostListPage />} />
			<Route path="/login" element={<LoginPage />} />
			<Route path="/register" element={<RegisterPage />} />
			<Route path="/write" element={<WritePage />} />
			<Route path="/@:username">
				<Route index element={<PostListPage />} />
				<Route path=":postId" element={<PostPage />} />
			</Route>
		</Routes>
	);
};

export default App;
```

## 3. 스타일 설정

- ex) styled-components 사용

```bash
$ yarn add styled-components
```

- lib/styles/palette.js 작성

### 4. 컴포넌트 작성

- ex) components/common/Button.js
- 굳이 Button 리액트 컴포넌트를 만들고, StyledButton을 렌더링해 주는 이유
    - 추후에 컴포넌트를 사용할 때 자동으로 import가 되게 하기 위함

```jsx
...

const Button = props => <SytledButton {...props} />;

export default Button;
```

### 5. 리덕스 적용

- 추후 비동기 작업을 관리하기 위해 redux-saga를 사용할 예정이지만, 단계적 접근을 위해 리덕스를 먼저 적용
1. 리덕스 사용에 필요한 라이브러리 설치

```bash
$ yarn add redux react-redux redux-actions immer redux-devtools-extension
```

1. 리덕스 모듈 생성
- 교재에서는 Ducks 패턴을 사용해 액션 타입, 액션 생성 함수, 리듀서가 하나의 파일에 정의되어 있는 리덕스 모듈을 작성할 것
- src/moduels/auth.js 모듈 생성

```jsx
import { createActions, handleActions } from 'redux-actions';

const SAMPLE_ACTION = 'auth/SAMPLE_ACTION';

export const sampleActions = createActions(SAMPLE_ACTION);

const initialState = {};

const auth = handleActions(
	{ 
		[SAMPLE_ACTION]: (state, action) => state,
	},
	initialState,
);

export default auth;
```

1. 루트 리듀서 생성
- src/modules/index.js

```jsx
import { combineReducers } from 'redux'
import auth from './auth';

const rootReducer = combineReducers({
	auth,
});
```