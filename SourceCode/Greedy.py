# 탐욕(Greedy) 알고리즘
# 여러 경우 중 하나를 선택할 때마다 최적이라고 생각되는 것을 선택해 나가는 방법
# 최적을 보장하지는 않음

# 1. 해 선택: 현재 상태에서 부분 문제의 최적 해를 구한 뒤, 이를 부분해 집합에 추가
# 2. 실행 가능성 검사: 새로운 부분해 집합이 실행가능한지 확인
# 3. 해 검사: 새로운 부분 해 집합이 문제의 해가 되는지 확인